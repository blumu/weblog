@{ 
  Layout = "page";
  Title = "William Blum's website";
  Description = "Blog about sofware I wrote and other things.";
}
@using System.Linq

Welcome to my blog. Here I write about software I develop in my spare time and
  other things...

<!-- Print more details about the first blog post -->
@{var first = Enumerable.First(Model.Posts); }
<div>
<h1><a href="@Model.Root/blog/@(first.Url).html">@first.Title</a></h1>
@first.Abstract
    
<p class="meta">
  <span><strong>Published</strong>: @first.Date.ToString("dddd, d MMMM yyyy, h:mm tt", System.Globalization.CultureInfo.GetCultureInfo("en-GB"))</span>
  @if (first.Tags.Count() > 0)
  { 
    <br />      
    <span class="tags"><strong>Tags</strong>: @String.Join(", ", first.Tags).ToLower() </span> 
  }
  <br />
  <a href="@Model.Root/blog/@(first.Url).html">Read the complete article</a>
</p>
</div>

<!-- For remaining articles, just print short summary with abstract -->
<h1><a href="@Model.Root/blog/index.html">Past articles</a></h1>
@foreach(var post in Enumerable.Take(Enumerable.Skip(Model.Posts, 1), 20)) {
  <h3 style=""margin-bottom:0px"><a href="@(Model.Root)/blog/@(post.Url).html">@post.Title</a></h3>
  <p class="smdate">@post.Date.ToString("dddd, d MMMM yyyy, h:mm tt", System.Globalization.CultureInfo.GetCultureInfo("en-GB"))</p>
  <!--
  <p class="description">
      @post.Description
  </p>-->
}
<br/>
<p class="meta">
  <a href="@Model.Root/blog/index.html">Find older blog articles here.</a>
</p>
