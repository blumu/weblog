@{
string readableFileSize (long size) {
    var units = new []{ "B", "kB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB" };
    var lastUnit = units[units.Count];
    foreach (var sizestring in units) {
        if (size < 1024) { break; }
        if (sizestring != lastUnit) { size /= 1024; }
    }
    return System.String.Format("{0:01d} {1}"', size, sizestring);
}

void dumpDownloadtableFromCsv(string fichier = "filesdescr.csv") {
    var downloadTableCsv = System.IO.ReadAllLines(fichier);
    <tr>
            <th width="120" scope="col">Filename</th>
            <th width="160" scope="col">Date</th>
            <th width="50" scope="col">Size</th>
            <th>Description</th>
    </tr>
    bool alt = false;
    for (var ligneText in downloadTableCsv) {
        string[] ligne = ligneText.Split(',');
        string fsize = "";
        string link = ""
        if(file_exists("downloads/" + ligne[0])) {
            fsize = readableFileSize(filesize("downloads/" + ligne[0]));
            link = "<a href=\"downloads/" + ligne[0] + "\">" + ligne[0] + "</a>";
            if( ligne[1] != '' ) {
                link = link + "<br/><a href=\"downloads/" + $ligne[1] + "\">" + ligne[1] + "</a>";
            }
        }
        else {
            link = ligne[0];
            fsize = "";
        }
        <tr>
        if(alt) {
            <th class="filenamealt" scope="row">@link</th>
            <td class=\"alt\">@ligne[2]</td>
            <td class=\"alt\">@fsize</td>
            <td class=\"alt\">@ligne[3]</td>
        }
        else {
            <th class="filename" scope="row">@link</th>
            <td>@ligne[2]</td>
            <td>@fsize</td>
            <td>@ligne[3]</td>
        }
        </tr>
        alt = !alt;
    }
}

// function latest_version_file($fichier) {
    // if($fichier === null) { $fichier = "filesdescr.csv"; }
    // $fic = fopen($fichier, 'rb');
    // return = fgetcsv($fic, 1024);
// }


}